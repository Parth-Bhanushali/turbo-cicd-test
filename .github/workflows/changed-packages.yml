# Turbo dry run to determine which apps have changed between the latest commit and target or previous commit
name: 'Determine changed packages'

on:
  workflow_call:
    outputs:
      changed_packages:
        description: 'Stringified JSON array of changed packages in this changeset'
        value: ${{ jobs.dry-run.outputs.changed_packages }}
      # AS A CONVENIENCE: These 3 outputs are shorthand so consumer can just check boolean output for these specific packages
      mobile_changed:
        description: 'Indicates if mobile or its dependencies have changed'
        value: ${{ jobs.dry-run.outputs.mobile_changed }}
      docs_changed:
        description: 'Indicates if docs or its dependencies have changed'
        value: ${{ jobs.dry-run.outputs.docs_changed }}
      web_changed:
        description: 'Indicates if the web or its dependencies have changed'
        value: ${{ jobs.dry-run.outputs.web_changed }}

jobs:
  dry-run:
    runs-on: ubuntu-latest
    env:
      TURBO_REF_FILTER: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' && github.event.pull_request.base.sha || github.event.before }}
    outputs:
      # Defining a job output for used by the next jobs:
      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idoutputs
      changed_packages: ${{ steps.output-changed-packages.outputs.changed_packages }}
      mobile_changed: ${{ steps.mobile-changed.outputs.result }}
      docs_changed: ${{ steps.docs-changed.outputs.result }}
      web_changed: ${{ steps.web-changed.outputs.result }}

    steps:
      - uses: actions/checkout@v4
        with:
          # we set to `0` so the referenced commits are available for the command below
          fetch-depth: 0

      - name: Changeset
        id: changeset
        # 1. We need the 'output' of a turbo dry-run to get a json with all affected packages of these run.
        # 2. The multi line json string is wrapped in EOF delimeters to make the GHA happy: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        # 3. We specify the .github/ folder as a dependency here. Just to be safe, if workflows changed, we use that to mean everything has changes pending... to force redeploys
        run: |
          echo 'result<<CHANGESET_DELIMITER' >> $GITHUB_OUTPUT
          echo "$(npx -y turbo build --dry-run=json --filter=...[$TURBO_REF_FILTER])" >> $GITHUB_OUTPUT
          echo 'CHANGESET_DELIMITER' >> $GITHUB_OUTPUT

      - name: Output changed packages
        id: output-changed-packages
        run: |
          echo 'changed_packages<<CHANGED_PACKAGES_DELIMITER' >> $GITHUB_OUTPUT
          echo "${{ toJSON(fromJSON(steps.changeset.outputs.result).packages) }}" >> $GITHUB_OUTPUT
          echo 'CHANGED_PACKAGES_DELIMITER' >> $GITHUB_OUTPUT

      - name: Did the MOBILE or its dependencies change?
        id: mobile-changed
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, 'mobile') }} 
        run: echo "result=true" >> $GITHUB_OUTPUT

      - name: Did the DOCS or its dependencies change?
        id: docs-changed
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, 'docs') }} 
        run: echo "result=true" >> $GITHUB_OUTPUT

      - name: Did the WEB or its dependencies change?
        id: web-changed
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, 'web') }} 
        run: echo "result=true" >> $GITHUB_OUTPUT
