name: CD

on:
  push: 
    branches: 
      - main
  pull_request:  
    branches:
      - main
    types: [opened, synchronize]

permissions:
  contents: read
  deployments: write

env:
  DEPLOYMENT_ENV: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'production' || 'preview' }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_CACHE: remote:rw

jobs:
  changed-packages:
    name: Determine which apps changed
    uses: ./.github/workflows/changed-packages.yml

  mobile:
    name: Deploy mobile
    needs: [changed-packages]
    if: needs.changed-packages.outputs.mobile_changed == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: deploy-mobile-${{ github.ref }}
      cancel-in-progress: true
    environment: 
      name: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'production' || 'preview' }}
    steps:
      - name: Display Environment
        run: echo "Deploying with $DEPLOYMENT_ENV credentials"

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      
      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Get fingerprint info
        id: fingerprints-info
        uses: expo/expo-github-action/continuous-deploy-fingerprint-info@main
        with: 
          profile: ${{ env.DEPLOYMENT_ENV }}
          working-directory: ./apps/mobile

      # Ensures turbo caches the build action
      - name: Build
        run: pnpm build --filter=mobile

      - name: Log Info
        run: |
          echo "android_build_id: ${{ steps.fingerprints-info.outputs.android-build-id }}"
          echo "ios_build_id: ${{ steps.fingerprints-info.outputs.ios-build-id }}"
          echo "android_fingerprint: ${{ steps.fingerprints-info.outputs.android-fingerprint }}"
          echo "ios_fingerprint: ${{ steps.fingerprints-info.outputs.ios-fingerprint }}"

      - name: Deploy
        id: deploy-mobile
        run: |
          echo deploy_url=https://expo.dev/accounts/parth_ayurheals/projects/mobile/builds/b99b23ac-31a4-4fcd-935c-838525beaf2a
          echo "Deployment Successful"
        working-directory: ./apps/mobile

  docs:
    name: Deploy docs
    needs: [changed-packages]
    if: needs.changed-packages.outputs.docs_changed == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: deploy-docs-${{ github.ref }}
      cancel-in-progress: true
    environment: 
      name: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'production' || 'preview' }}
    steps:
      - name: Display Environment
        run: echo "Deploying with $DEPLOYMENT_ENV credentials"

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Vercel CLI
        run: pnpm add -g vercel

      - name: Pull Vercel Environment Information
        run: echo "Pulled env from vercel server"
        working-directory: ./apps/docs

      # Ensures turbo caches the build action
      - name: Build
        run: pnpm build --filter=docs

      - name: Deploy
        id: deploy-docs
        run: |
          echo deploy_url=https://docs-1234567891234567-preview.vercel.app
          echo "Deployment Successful"
        working-directory: ./apps/docs

  web:
    name: Deploy web
    needs: [changed-packages]
    if: needs.changed-packages.outputs.web_changed == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: deploy-web-${{ github.ref }}
      cancel-in-progress: true
    environment: 
      name: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'production' || 'preview' }}
    steps:
      - name: Display Environment
        run: echo "Deploying with $DEPLOYMENT_ENV credentials"

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Vercel CLI
        run: pnpm add -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull -y --environment=$DEPLOYMENT_ENV --token $TURBO_TOKEN
        working-directory: ./apps/web

      # Ensures turbo caches the build action
      - name: Build
        run: pnpm build --filter=web

      - name: Deploy
        run: |
          echo "deploy_url=$(vercel deploy --prebuilt --target $DEPLOYMENT_ENV --token $TURBO_TOKEN)"
          echo "Deployment Successful"
        working-directory: ./apps/web
  
  